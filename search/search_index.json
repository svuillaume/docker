{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p>docker build -t samv-docker .</p>"},{"location":"#git-cheat-sheet","title":"\ud83e\udde0 Git Cheat Sheet","text":"<p>Welcome to your ultimate Git command reference! Below you'll find the most essential commands, categorized for easy navigation.</p>"},{"location":"#setup-config","title":"\ud83d\udee0\ufe0f Setup &amp; Config","text":"<p>```bash git config --global user.name \"Your Name\" git config --global user.email \"you@example.com\" git config --list Configure your identity for Git commits.</p> <p>\ud83d\udcc1 Initialize &amp; Clone git init                      # Create a new Git repo git clone               # Clone a repo git clone git@github.com:me/repo.git  # Clone via SSH <p>\ud83d\udd04 Working with Changes git status                   # See current changes git add                # Stage file(s) git add .                    # Stage all changes git commit -m \"message\"      # Commit with a message git commit -am \"msg\"         # Add + commit tracked files \u2705 Tip: git commit -am skips git add for already tracked files. <p>\ud83d\udcdc Branching git branch                   # List branches git branch            # Create new branch git checkout          # Switch branch git checkout -b       # Create and switch git merge             # Merge branch into current git branch -d         # Delete branch <p>\ud83c\udf0d Remotes git remote -v                            # Show remotes git remote add origin              # Add remote git remote set-url origin      # Change remote URL <p>\ud83d\udce4 Push &amp; Pull git push origin      # Push branch git pull origin      # Pull latest changes git fetch                    # Download commits without merge \ud83d\udd10 Use SSH to avoid entering credentials every push. <p>\ud83e\udded Stashing git stash              # Save changes for later git stash list         # List stashed items git stash apply        # Reapply last stash git stash pop          # Apply + remove stash</p> <p>\ud83d\udd70\ufe0f Logs &amp; History git log                     # Show commit log git log --oneline --graph   # Compact view git show            # Show specific commit <p>\u274c Undo &amp; Reset git restore           # Undo changes to file git reset             # Unstage file git reset --hard            # Discard all changes git revert          # Revert a commit \ud83d\udd0d Useful Tips \ud83c\udff7\ufe0f Use .gitignore to exclude files. <p>\ud83d\udd00 Use git rebase to clean history.</p> <p>\ud83d\udc1b Use git bisect to find bugs.</p> <p>\ud83d\ude80 Advanced git cherry-pick      # Apply a commit from another branch git rebase -i HEAD~3         # Interactive rebase (edit history) git tag                # Create a tag git diff                     # Show unstaged changes <p>\ud83e\uddea Example Workflow</p>"},{"location":"#start-a-new-project","title":"Start a new project","text":"<p>git init git add . git commit -m \"Initial commit\" git remote add origin git@github.com:me/project.git git push -u origin main</p>"}]}